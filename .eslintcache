[{"D:\\projetos\\robofriends\\src\\index.js":"1","D:\\projetos\\robofriends\\src\\reportWebVitals.js":"2","D:\\projetos\\robofriends\\src\\Card.js":"3","D:\\projetos\\robofriends\\src\\robots.js":"4","D:\\projetos\\robofriends\\src\\CardList.js":"5","D:\\projetos\\robofriends\\src\\App.js":"6","D:\\projetos\\robofriends\\src\\SearchBox.js":"7"},{"size":553,"mtime":1612519457435,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610892739343,"results":"10","hashOfConfig":"9"},{"size":390,"mtime":1612381734031,"results":"11","hashOfConfig":"9"},{"size":1343,"mtime":1612381734033,"results":"12","hashOfConfig":"9"},{"size":531,"mtime":1612382882614,"results":"13","hashOfConfig":"9"},{"size":992,"mtime":1612519989277,"results":"14","hashOfConfig":"9"},{"size":457,"mtime":1612519944452,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1c23mb9",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\projetos\\robofriends\\src\\index.js",["32"],"D:\\projetos\\robofriends\\src\\reportWebVitals.js",[],["33","34"],"D:\\projetos\\robofriends\\src\\Card.js",["35"],"import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='photo' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","D:\\projetos\\robofriends\\src\\robots.js",[],"D:\\projetos\\robofriends\\src\\CardList.js",[],"D:\\projetos\\robofriends\\src\\App.js",[],"D:\\projetos\\robofriends\\src\\SearchBox.js",[],{"ruleId":"36","severity":1,"message":"37","line":6,"column":8,"nodeType":"38","messageId":"39","endLine":6,"endColumn":16},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":6,"column":13,"nodeType":"46","endLine":6,"endColumn":75},"no-unused-vars","'tachyons' is defined but never used.","Identifier","unusedVar","no-native-reassign",["47"],"no-negated-in-lhs",["48"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]